;;; printf.test                -*- scheme -*-
;;;
;;; Copyright (C) 2023 Matthew Wette
;;;
;;; Copying and distribution of this file, with or without modification,
;;; are permitted in any medium without royalty provided the copyright
;;; notice and this notice are preserved.  This file is offered as-is,
;;; without any warranty.

;; Test the runtime parsing utilities.
;; examples/nyacc$ guile lang/t-util.scm

(use-modules (printf))
(use-modules (ice-9 pretty-print)) (define pp pretty-print)

(define-syntax-rule (with-test-prefix desc test ...) (begin test ...))

(define (pass-if str cnd)
  (display str)
  (display " => ")
  (display (if cnd "PASS\n" "FAIL\n")))

(with-test-prefix "nyacc/lang/printf"

  ;; The input-stack used to pull in input from include files.
  (pass-if "integer formatting"
    (and
     (string=? (sprintf "%d" 1) "1")
     (string=? (sprintf "%-04x" 1) "1   ")
     ))

  (pass-if "float formatting"
    (and
     (string=? (sprintf "%f" 123.45) "123.450000")
     (string=? (sprintf "%7.1f" 123.45) "  123.4")
     (string=? (sprintf "%-9.6f" 12.3456789) "12.345678")
     (string=? (sprintf "%-9.6f" -12.3456789) "-12.345678")
     (string=? (sprintf "%3.1f" 1.23) "1.2")
     (string=? (sprintf "%3.1f" 0.123) "0.1")
     (string=? (sprintf "%3.1f" 0.0123) "0.0")
     (string=? (sprintf "%.1f" 1.23) "1.2")
     (string=? (sprintf "%.1f" 0.123) "0.1")
     (string=? (sprintf "%.1f" 0.0123) "0.0")
     ))

  )

;;; --- last line ---
